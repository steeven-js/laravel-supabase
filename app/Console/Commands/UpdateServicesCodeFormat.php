<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use App\Models\Service;

class UpdateServicesCodeFormat extends Command
{
    /**
     * The name and signature of the console command.
     */
    protected $signature = 'services:update-codes {--dry-run : Afficher les changements sans les appliquer}';

    /**
     * The console command description.
     */
    protected $description = 'Met √† jour les codes de services au format SRV-25-001';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        $services = Service::all();
        $annee = date('y'); // Ann√©e sur 2 digits
        $isDryRun = $this->option('dry-run');

        if ($isDryRun) {
            $this->info('üîç Mode simulation - Aucun changement ne sera appliqu√©');
            $this->line('');
        }

        $this->info("üìã Mise √† jour des codes de services au format SRV-{$annee}-XXX");
        $this->line('');

        if ($services->isEmpty()) {
            $this->warn('Aucun service trouv√©.');
            return Command::SUCCESS;
        }

        $updated = 0;
        $skipped = 0;

        foreach ($services as $service) {
            $ancienCode = $service->code;
            $id = str_pad($service->id, 3, '0', STR_PAD_LEFT);
            $nouveauCode = "SRV-{$annee}-{$id}";

            // V√©rifier si le code est d√©j√† au bon format
            if ($ancienCode === $nouveauCode) {
                $this->line("‚è≠Ô∏è  Service #{$service->id} : Code d√©j√† au bon format ({$nouveauCode})");
                $skipped++;
                continue;
            }

            // V√©rifier si le nouveau code existe d√©j√†
            if (Service::where('code', $nouveauCode)->where('id', '!=', $service->id)->exists()) {
                $this->error("‚ùå Conflit : Le code {$nouveauCode} existe d√©j√† pour un autre service");
                continue;
            }

            if ($isDryRun) {
                $this->line("üîÑ Service #{$service->id} : {$ancienCode} ‚Üí {$nouveauCode}");
            } else {
                $service->update(['code' => $nouveauCode]);
                $this->line("‚úÖ Service #{$service->id} : {$ancienCode} ‚Üí {$nouveauCode}");
            }

            $updated++;
        }

        $this->line('');

        if ($isDryRun) {
            $this->info("üìä R√©sum√© de la simulation :");
            $this->line("   ‚Ä¢ Services √† mettre √† jour : {$updated}");
            $this->line("   ‚Ä¢ Services d√©j√† conformes : {$skipped}");
            $this->line('');
            $this->info('Pour appliquer les changements, ex√©cutez la commande sans --dry-run');
        } else {
            $this->info("‚úÖ Mise √† jour termin√©e !");
            $this->line("   ‚Ä¢ Services mis √† jour : {$updated}");
            $this->line("   ‚Ä¢ Services d√©j√† conformes : {$skipped}");
        }

        return Command::SUCCESS;
    }
}
